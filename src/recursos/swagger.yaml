openapi: 3.0.0
info:
  title: API ContaCerta
  version: "1.0.0"
  description: |
    API RESTful para controle financeiro e de vendas â€” ContaCerta v3.
    Inclui autenticaÃ§Ã£o JWT, CRUDs, cÃ¡lculo de CMV e relatÃ³rios.
  contact:
    name: ContaCerta Team

servers:
  - url: http://localhost:3000
    description: Servidor local

tags:
  - name: auth
    description: AutenticaÃ§Ã£o e sessÃ£o
  - name: clientes
    description: Cadastro e gestÃ£o de clientes
  - name: produtos
    description: Cadastro e gestÃ£o de produtos
  - name: pedidos
    description: Registro e consulta de pedidos
  - name: relatorios
    description: RelatÃ³rios financeiros

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    Authorization:
      name: Authorization
      in: header
      description: Token JWT no formato Bearer <token>
      required: true
      schema:
        type: string
        example: "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    IdPath:
      name: id
      in: path
      description: Identificador numÃ©rico do recurso
      required: true
      schema:
        type: integer
        example: 1

  schemas:
    ErroPadrao:
      type: object
      properties:
        success: { type: boolean, example: false }
        codigo: { type: string, example: "ERR_VALIDACAO_CAMPOS" }
        mensagem: { type: string, example: "Campos obrigatÃ³rios ausentes" }
        detalhes:
          type: array
          items:
            type: object
            properties:
              campo: { type: string, example: "nome" }
              erro: { type: string, example: "Obrigatório" }
        timestamp: { type: string, example: "2025-10-29T12:00:00.000Z" }

    UsuarioLogin:
      type: object
      required: [email, senha]
      properties:
        email: { type: string, example: "admin@contacerta.com" }
        senha: { type: string, example: "admin123" }

    UsuarioLoginResposta:
      type: object
      properties:
        success: { type: boolean, example: true }
        
        mensagem: { type: string, example: "Login realizado com sucesso!" }
        data:
          type: object
          properties:
            usuario:
              type: object
              properties:
                id: { type: integer, example: 1 }
                nome: { type: string, example: "Administrador" }
                email: { type: string, example: "admin@contacerta.com" }
            token: { type: string, example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..." }
        timestamp: { type: string, example: "2025-10-29T12:00:00.000Z" }

    UsuarioRegister:
      type: object
      required: [email, senha]
      properties:
        nome: { type: string, example: "Maria Souza" }
        email: { type: string, example: "novo@contacerta.com" }
        senha:
          type: string
          example: "SenhaForte123!"
          minLength: 8
          description: "MÃ­n. 8 caracteres, contendo maiÃºscula, minÃºscula, nÃºmero e caractere especial"
        perfil: { type: string, example: "user" }

    PasswordChangeInput:
      type: object
      required: [senhaAtual, novaSenha]
      properties:
        senhaAtual: { type: string, example: "SenhaForte123!" }
        novaSenha:
          type: string
          example: "NovaSenhaF0rte!"
          minLength: 8
          description: "MÃ­n. 8 caracteres, contendo maiÃºscula, minÃºscula, nÃºmero e caractere especial"

    ForgotPasswordInput:
      type: object
      required: [email]
      properties:
        email: { type: string, example: "usuario@contacerta.com" }

    ResetPasswordInput:
      type: object
      required: [token, novaSenha]
      properties:
        token: { type: string, example: "<token_de_reset>" }
